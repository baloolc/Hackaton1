{% extends 'layout.html.twig' %}

{% block content %}
	<main class="py-5 rounded-3">
		<h1 class="w-fit mx-auto">Webinator</h1>
		<div class="w-fit mx-auto pt-5">
		<div class="w-100 mx-auto px-3 py-1 bg-light border rounded-3 mb-3" id="game-info">
			<h3 class="w-fit mx-auto">Niveau 1</h3>
			<h5>Score: 343</h5>
		</div>
			<canvas id="game" class="rounded-3"></canvas>
		</div>
		<script type="module">
			import EnemyController from "/assets/js/EnemyController.js";
			import Player from "/assets/js/Player.js";
			import BulletController from "/assets/js/BulletController.js";
			const gameInfo = document.getElementById("game-info");
			const canvas = document.getElementById("game");
			const ctx = canvas.getContext("2d");

			canvas.width = 1000;
			canvas.height = 600;

			const background = new Image();
			background.src = "/assets/images/bg-game.jpeg";

			let enemyMap = [
				[1, 1, 1, 1, 2, 3, 4, 1, 1, 1, 1],
			];

			const playerBulletController = new BulletController(canvas, 10, "green");
			let enemyBulletController = new BulletController(canvas, 4, "white");
			let enemyController = new EnemyController(canvas, enemyBulletController, playerBulletController, enemyMap, 1, 1);
			const player = new Player(canvas, 3, playerBulletController);
			let isGameOver = false;
			let didWin = false;
			let stageTwo = false;

			function game() {
			checkGameOver();
			showGameInfo();
			ctx.drawImage(background, 0, 0, canvas.width, canvas.height);
			displayGameOver();
				if (!isGameOver) {
					enemyController.draw(ctx);
					player.draw(ctx);
					playerBulletController.draw(ctx);
					enemyBulletController.draw(ctx);
				}
			}

			function showGameInfo() {
				if (!stageTwo) {
					gameInfo.innerHTML = `<h3 class="w-fit mx-auto">Niveau 1</h3> 
					<h5>Score: ${enemyController.score}</h5>
					<p>Détruisez tous les sites pour le prochain niveau</p>`;
				} else {
					gameInfo.innerHTML = `<h3 class="w-fit mx-auto">Niveau 2</h3> 
					<h5>Score: ${enemyController.score}</h5>
					<label for="file">Boss:</label><br>
					<progress id="file" value="${enemyController.health}" max="20"></progress>`;
				}
			}

			function displayGameOver() {
				if (isGameOver) {
					let text = didWin ? ['Vous avez sauvé la planète !'] : ['Vous êtes mort, ', 'l\'avenir de la planète est foutu !'];
					let textOffset = didWin ? 5 : 8;

					ctx.fillStyle = 'white';
					ctx.font = '50px Arial';
					for (let i = 0; i < text.length; i++) {
						ctx.fillText(text[i], canvas.width / textOffset, ((canvas.height / 2) + 53 * i));
					}

				}
			}

			function checkGameOver() {
				if (isGameOver) {
					return;
				}

				if (enemyBulletController.collideWith(player)) {
					isGameOver = true;
				}

				if (enemyController.collideWith(player)) {
					isGameOver = true;
				}

				if (enemyController.enemyRows.length === 0) {
					if (!stageTwo) {
						stageTwo = true;
						enemyMap = [[5]];
						enemyBulletController = new BulletController(canvas, 6, "white");
						enemyController = new EnemyController(canvas, enemyBulletController, playerBulletController, enemyMap, 20, 2); //a changer via twig en fonction de l'API
					} else {
						didWin = true;
						isGameOver = true;
					}
					
				}
			}

			setInterval(game, 1000 / 60);
		</script>
	</main>
{% endblock %}
